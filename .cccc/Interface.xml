<?xml version="1.0" encoding="utf-8"?>
<!--Detailed report on module Interface-->
<CCCC_Project>
<module_summary>
<lines_of_code value="13" level="0" />
<lines_of_code_per_member_function value="******" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<McCabes_cyclomatic_complexity_per_member_function value="******" level="0" />
<lines_of_code value="1" level="0" />
<lines_of_code_per_member_function value="********" level="2" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
<weighted_methods_per_class_unity value="10" level="0" />
<weighted_methods_per_class_visibility value="9" level="0" />
<depth_of_inheritance_tree value="0" level="0" />
<number_of_children value="1" level="0" />
<coupling_between_objects value="2" level="0" />
<IF4 value="1" level="0" />
<IF4_per_member_function value="********" level="2" />
<IF4_visible value="1" level="0" />
<IF4_visible_per_member_function value="********" level="2" />
<IF4_concrete value="0" level="0" />
<IF4_concrete_per_member_function value="********" level="0" />
</module_summary>
<module_detail>
<description>definition</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="191" />
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</module_detail>
<procedural_detail>
<member_function>
<name>IntFromString(char *)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="196" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>IntRefFromString(char *)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="197" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>StringFromString(char *)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="195" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromDouble(double)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="201" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromFloat(float)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="200" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromFunc(...)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="198" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromIntRef(int &amp;)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="199" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="1" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromString(char *)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="194" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>VoidFromVector(const vector &amp;)</name>
<extent>
<description>declaration</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="202" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>~Interface()</name>
<extent>
<description>definition</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="193" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
</procedural_detail>
<structural_detail>
<module>
<name>Interface</name>
<client_module>
<name>Mock</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>inheritance</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="205" />
</extent>
</client_module>
<supplier_module>
<name>vector</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="./lib/googletest/googlemock/test/gmock_link_test.h" line="202" />
</extent>
</supplier_module>
</module>
</structural_detail>
</CCCC_Project>
